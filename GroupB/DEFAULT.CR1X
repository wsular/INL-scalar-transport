'CR1000X Series Datalogger
'Copyright (c) 2020 Washington State University. Adapted with permission.

'Date: August 2020
'Program author: Zhongming Gao 
'CR1000X for Group B @ 12.5 m (B.2.CR1000X)

'The following sensors are measured:
'CSAT3B three dimensional sonic anemometer  x  3
'CSAT3  three dimensional sonic anemometer  x  1
'LI7500RS infrared CO2/H2O gas analyzer     x  2
'Temperature and relative humidity probe    x  4
'LI190R quantum (PAR) sensor                x  1
'FW3 fine-wire thermocouple                 x  1
'GPS                                        x  1
'AM25T      				    x  1

'Abbreviations in comments and variables
'CR1K   CR1000X
'CSAT   CSAT3A or CSAT3B
'sonic  CSAT3A or CSAT3B
'CS6XX  CS616, CS650, or CS655
'CS65X  CS650 or CS655
'cumul  cumulative
'dia    diameter
'diag   dignosis
'dir    direction
'dist   distance
'flg    flag
'FP     footprint
'Freq   frequency
'FW     FW05, FW1, or FW3. FW is an abbreviation for fine wire thermocouple
'intrst interest
'IRGA   LI7500, LI7500A, or LI7500RS InfraRed Gas Analyzer
'nmbr   number
'pct    percent
'Pyran  pyranometer
'RH     relative humidity
'rng    range
'QC     quality control or quality classification
'shf    soil heat flux
'shfp   soil heat flux plate
'sig    signal
'strgth strength
'within win
'wnd    wind
'wtr    water
'hfp01xx HFP01 or HFP01SC soil heat flux plate sensor

'*** Unit Definitions ***
'SYMBOL      UNIT
'C           Celsius
'degrees     angle degrees
'frac_v_wtr  Fraction volumetric water content
'g           grams
'J           Joules
'Hz          Hertz
'kg          kilograms
'kPa         kilopascals
'm           meters
'mg          milligrams
'mmol        millimole
'mol         mole
'ms          millisecond
's           seconds
'umol        micromoles
'usecond     microsecond
'V           volts
'W           Watts


PipeLineMode
SDMBeginPort(C5)  'Use C5, C6, and C7 as the SMD port since C1 is used for GPS PPS.

'---------------------------------------------
' Declare Constants
'---------------------------------------------
Const SCN_INTV                   = 100           'Unique: measurement rate 100 ms (10 Hz), 200 ms (5 Hz), or 1000 ms (1 Hz)
Const SLW_SCN_INTV               = 3000          'Unique: slow sequence measurement rate (ms) >3000 ms and <6000ms (Note: SDI-12 sensors too slow for sub-second intervals)
Const OUTPUT_INTV                = 5             'Unique: online flux data output interval (minutes).
Const DAY_RMET_CRD               = 30            'Unique: number of days of Flux and Flux_Notes table data to store in each file on the card.  Number of files stored depends on card size.
Const DAY_TSRS_CRD               = 1             'Unique: number of days of Time_Series table data to store in each file on the card (days). Number of files stored depends on card size.
Const SDM_PER                    = 50            'Unique: default SDM clock speed (uS).

Const ANALOG_INTEGRATION         = 60         'Unique: slowsequence analog measurement integration time, _60Hz (e.g. in US, Canada, etc.) or _50Hz (e.g. in Europe, China, etc.)

Const SCAN_BUFFER_SIZE           = 290*INT (1000/SCN_INTV) 'Compute a 290-second scan buffer (The buffer less than 5 minutes is required because of 5-minute interval for data tables used in QC.

Const NMBR_DAY_CPU               = 7             'Number of days for flux data to store on the CPU.
Const FLUX_SIZE_CPU              = Ceiling ((NMBR_DAY_CPU*1440)/OUTPUT_INTV) 'Size of flux data table on CPU [(days*1440 minutes/day)/(minutes/record)] = records].

Const R       = 8.3143e-3          'Universal gas constant [kPa m^3/(K mol)]


'CSAT3B & CSAT3 three dimensional sonic anemometer  x  4
Const CSAT_SDM_ADDR_B4           = 1           'Unique: SDM address for CSAT3B @ 23 m (B.4.CSAT3B).
Const CSAT_SDM_ADDR_B3           = 2           'Unique: SDM address for CSAT3B @ 16.5 m (B.3.CSAT3B).
Const CSAT_SDM_ADDR_B2           = 3           'Unique: SDM address for CSAT3B @ 12.5 m (B.2.CSAT3B).
Const CSAT_SDM_ADDR_B1           = 9           'Unique: SDM address for CSAT3B @ 9 m (B.1.CSAT3).
Const CSAT_OPT                   = INT (1000/SCN_INTV)      '10 Hz

'LI7500RS infrared CO2/H2O gas analyzer     x  2
Const IRGA_SDM_ADDR_B4           = 5           'Unique: SDM address for IRGA @ 23 m (B.4.IRGA).
Const IRGA_SDM_ADDR_B2           = 7           'Unique: SDM address for IRGA @ 12.5 m (B.2.IRGA).

'AM25T      				    x  1
Const AM25T_DiffChan             =  1          'AM25T Common high & low
Const AM25T_ClkPort              =  C3         'AM25T Clock
Const AM25T_ResPort              =  C4         'AM25T Reset
Const AM25T_ExChan               =  Vx1        'AM25T PRT excitation

'LI190R quantum (PAR) sensor                x  1
Const QUANTUM_SENS          = 7.01  'uA per 1000 umol/m^2/s
Const QUANTUM_ANALOG_INPUT  = 3     'Differential analog input channel for quantum PAR sensor
Const QUANTUM_MULT          = 1000/(QUANTUM_SENS*0.604)   'Unique: multiplier (1000 C) for quantum PAR sensor.
Const QUANTUM_OFFSET        = 0     'Unique: offset for for quantum PAR sensor.


'FW3 fine-wire thermocouple                 x  1
Const FW_ANALOG_INPUT  = 4          'Differential analog input channel for FW (Input channel 5 or 11 is recommended)

'Temperature and relative humidity probe    x  4 @ AM25T
Const TMPR_RH_ANALOG_INPUT = 1                 'Starting differential analog input channel (AM25T) for temperature and humidity probe.
Const TMPR_MULT_B4     As Float    = 0.14             'Unique: temperature multiplier HMP155A = 0.14
Const TMPR_OFFSET_B4   As Float    = -80.0            'Unique: temperature offset HC2S3 = -40, HMP155A = -80, or HMP45C = -40.
Const TMPR_MULT        As Float    = 0.1              'Unique: temperature multiplier HC2S3 = 0.1
Const TMPR_OFFSET      As Float    = -40              'Unique: temperature offset HC2S3 = -40
Const RH_MULT          As Float    = 0.1              'Unique: RH multiplier HC2S3 = 0.1, HMP155A = 0.1, or HMP45C = 0.1
Const RH_OFFSET        As Float    = 0.0              'Unique: RH offset HC2S3 = 0, HMP155A = 0, or HMP45C = 0.

'GPS                                        x  1
Const GPS16X_COM = ComC1      'Serial port for GPS16X with PPS
Const UTC_OFFSET = -7        'local time offset from UTC, in hours = Mountain Standard Time
Const MAX_CLOCK_DRIFT = 20  'max clock drift permitted before setting clock, in msec


'--------------------------------------------------------
' Declare Variables, Aliases, and Units
'---------------------------------------------------------
'CSAT3B three dimensional sonic anemometer  x  4
Public sonic(20)                          'Hold sonic data aligned in scan with data from IRGA and/or
Alias  sonic(1) = Ux_B4
Alias  sonic(2) = Uy_B4
Alias  sonic(3) = Uz_B4
Alias  sonic(4) = Ts_B4
Alias  sonic(5) = diag_sonic_B4
Alias  sonic(6) = Ux_B3
Alias  sonic(7) = Uy_B3
Alias  sonic(8) = Uz_B3
Alias  sonic(9) = Ts_B3
Alias  sonic(10) = diag_sonic_B3
Alias  sonic(11) = Ux_B2
Alias  sonic(12) = Uy_B2
Alias  sonic(13) = Uz_B2
Alias  sonic(14) = Ts_B2
Alias  sonic(15) = diag_sonic_B2
Alias  sonic(16) = Ux_B1
Alias  sonic(17) = Uy_B1
Alias  sonic(18) = Uz_B1
Alias  sonic(19) = Ts_B1
Alias  sonic(20) = diag_sonic_B1
Units  Ux_B4 = m/s
Units  Uy_B4 = m/s
Units  Uz_B4 = m/s
Units  Ts_B4 = degC
Units  diag_sonic_B4 = unitless
Units  Ux_B3 = m/s
Units  Uy_B3 = m/s
Units  Uz_B3 = m/s
Units  Ts_B3 = degC
Units  diag_sonic_B3 = unitless
Units  Ux_B2 = m/s
Units  Uy_B2 = m/s
Units  Uz_B2 = m/s
Units  Ts_B2 = degC
Units  diag_sonic_B2 = unitless
Units  Ux_B1 = m/s
Units  Uy_B1 = m/s
Units  Uz_B1 = m/s
Units  Ts_B1 = degC
Units  diag_sonic_B1 = unitless

'CSAT3B monitor outputs
Public monitor(12)
Alias  monitor(1)  = Btemp_B4     'Board Temperature
Alias  monitor(2)  = Bhumidity_B4 'Board Relative Humidity
Alias  monitor(3)  = Ipitch_B4    'Inclinometer Pitch
Alias  monitor(4)  = Iroll_B4     'Inclinometer Roll
Alias  monitor(5)  = Btemp_B3     'Board Temperature
Alias  monitor(6)  = Bhumidity_B3 'Board Relative Humidity
Alias  monitor(7)  = Ipitch_B3    'Inclinometer Pitch
Alias  monitor(8)  = Iroll_B3     'Inclinometer Roll
Alias  monitor(9)  = Btemp_B2     'Board Temperature
Alias  monitor(10) = Bhumidity_B2 'Board Relative Humidity
Alias  monitor(11) = Ipitch_B2    'Inclinometer Pitch
Alias  monitor(12) = Iroll_B2     'Inclinometer Roll
Units  Btemp_B4     = degC
Units  Bhumidity_B4 = %
Units  Ipitch_B4    = deg
Units  Iroll_B4     = deg
Units  Btemp_B3     = degC
Units  Bhumidity_B3 = %
Units  Ipitch_B3    = deg
Units  Iroll_B3     = deg
Units  Btemp_B2     = degC
Units  Bhumidity_B2 = %
Units  Ipitch_B2    = deg
Units  Iroll_B2     = deg

'CSAT3B & CSAT3 diagnostic flags
Public diag_bits_sonic(31) As Boolean
Alias diag_bits_sonic(1)  = FLowAmp_B4      'Low Amplitude Flag
Alias diag_bits_sonic(2)  = FHighAmp_B4     'High Amplitude Flag
Alias diag_bits_sonic(3)  = FTracking_B4    'Tracking Flag
Alias diag_bits_sonic(4)  = FHighDeltaC_B4  'High Delta Speed of Sound Flag
Alias diag_bits_sonic(5)  = FAcq_B4         'Acquiring Flag
Alias diag_bits_sonic(6)  = FLowVolt_B4     'Low Supply Voltage Flag
Alias diag_bits_sonic(7)  = FMemErr_B4      'Memory Error Flag
Alias diag_bits_sonic(8)  = FADCSkip_B4     'ADC Clock Error Flag
Alias diag_bits_sonic(9)  = FTrigErr_B4     'Trigger Error Flag
Alias diag_bits_sonic(10) = FLowAmp_B3      'Low Amplitude Flag
Alias diag_bits_sonic(11) = FHighAmp_B3     'High Amplitude Flag
Alias diag_bits_sonic(12) = FTracking_B3    'Tracking Flag
Alias diag_bits_sonic(13) = FHighDeltaC_B3  'High Delta Speed of Sound Flag
Alias diag_bits_sonic(14) = FAcq_B3         'Acquiring Flag
Alias diag_bits_sonic(15) = FLowVolt_B3     'Low Supply Voltage Flag
Alias diag_bits_sonic(16) = FMemErr_B3      'Memory Error Flag
Alias diag_bits_sonic(17) = FADCSkip_B3     'ADC Clock Error Flag
Alias diag_bits_sonic(18) = FTrigErr_B3     'Trigger Error Flag
Alias diag_bits_sonic(19) = FLowAmp_B2      'Low Amplitude Flag
Alias diag_bits_sonic(20) = FHighAmp_B2     'High Amplitude Flag
Alias diag_bits_sonic(21) = FTracking_B2    'Tracking Flag
Alias diag_bits_sonic(22) = FHighDeltaC_B2  'High Delta Speed of Sound Flag
Alias diag_bits_sonic(23) = FAcq_B2         'Acquiring Flag
Alias diag_bits_sonic(24) = FLowVolt_B2     'Low Supply Voltage Flag
Alias diag_bits_sonic(25) = FMemErr_B2      'Memory Error Flag
Alias diag_bits_sonic(26) = FADCSkip_B2     'ADC Clock Error Flag
Alias diag_bits_sonic(27) = FTrigErr_B2     'Trigger Error Flag
Alias diag_bits_sonic(28) = FLowAmp_B1      'Low Amplitude Flag
Alias diag_bits_sonic(29) = FHighAmp_B1     'High Amplitude Flag
Alias diag_bits_sonic(30) = FTracking_B1    'Tracking Flag
Alias diag_bits_sonic(31) = FHighDeltaC_B1  'High Delta Speed of Sound Flag

'LI7500RS infrared CO2/H2O gas analyzer     x  2
Public irga(8)
Alias irga(1)  = co2_B4
Alias irga(2)  = h2o_B4
Alias irga(3)  = sig_irga_B4
Alias irga(4)  = Press_irga_B4
Alias irga(5)  = co2_B2
Alias irga(6)  = h2o_B2
Alias irga(7)  = sig_irga_B2
Alias irga(8)  = Press_irga_B2

Units co2_B4        = mg/m^3
Units h2o_B4        = g/m^3
Units Press_irga_B4 = kPa
Units sig_irga_B4   = unitless
Units co2_B2        = mg/m^3
Units h2o_B2        = g/m^3
Units Press_irga_B2 = kPa
Units sig_irga_B2   = unitless

Public mco2(2)
Alias  mco2(1)  = mco2_B4
Alias  mco2(2)  = mco2_B2
Units  mco2     = ppm

'Temperature and relative humidity probe    x  4
Public hmp(8)      
Alias hmp(1) = Tair_B4
Alias hmp(2) = RH_B4
Alias hmp(3) = Tair_B3
Alias hmp(4) = RH_B3
Alias hmp(5) = Tair_B2
Alias hmp(6) = RH_B2
Alias hmp(7) = Tair_B1
Alias hmp(8) = RH_B1
Units Tair_B4 = DegC
Units RH_B4   = %
Units Tair_B3 = DegC
Units RH_B3   = %
Units Tair_B2 = DegC
Units RH_B2   = %
Units Tair_B1 = DegC
Units RH_B1   = %

'LI190R quantum (PAR) sensor                x  1
Public PAR_density_B2
Units  PAR_density_B2 = umol/(s m^2)

'FW3 fine-wire thermocouple                 x  1
Public FW_B2
Units  FW_B2 = degC

'GPS                                        x  1
Dim nmea_sentence(2) As String * 100

Public gps_data(15)
Alias gps_data(1) = latitude_deg            'Degrees latitude (+ = East; - = West)
Alias gps_data(2) = latitude_min            'Decimal minutes latitude
Alias gps_data(3) = longitude_deg           'Degress longitude (+ = East; - = West)
Alias gps_data(4) = longitude_min           'Decimal minutes longitude
Alias gps_data(5) = speed                   'Speed
Alias gps_data(6) = course                  'Course over ground
Alias gps_data(7) = magnetic_variation      'Magnetic variation from true north (+ = East; - = West)
Alias gps_data(8) = fix_quality             'GPS fix quality: 0 = invalid, 1 = GPS, 2 = 'differential GPS, 6 = estimated
Alias gps_data(9) = nmbr_satellites         'Number of satellites used for fix
Alias gps_data(10) = altitude               'Antenna altitude
Alias gps_data(11) = pps                    'Elapsed ms since last pulse per second (PPS) from GPS
Alias gps_data(12) = dt_since_gprmc         'Time since last GPRMC string, normally less than '1 second
Alias gps_data(13) = gps_ready              'Counts from 0 to 10, 10 = ready
Alias gps_data(14) = max_clock_change       'Maximum value the clock was changed
Alias gps_data(15) = nmbr_clock_change      'Number of times the clock was changed
Units latitude_deg = degreesN
Units latitude_min = minutesN
Units longitude_deg = degreesE
Units longitude_min = minutesE
Units speed = m/s
Units course = degreesEofN
Units magnetic_variation = degreesEofN
Units fix_quality = unitless
Units nmbr_satellites = unitless
Units altitude = m
Units pps = ms
Units dt_since_gprmc = s
Units gps_ready = unitless
Units max_clock_change = ms
Units nmbr_clock_change = occurrences

'Battery voltage and panel temp
Public BattV
Public PTemp_C
Public RTemp_C
Units  BattV = Volts
Units  PTemp_C = degC
Units  RTemp_C = degC

Dim divisor                                 'Temporary variable used to find molar mixing ratio.
Dim diag_integer  As Long                   'Temporary variable used to break up the sonic warning flags
Dim disable_stats_sonic(8) As Boolean       'Intermediate processing sonic disable flags 

'---------------------------------------------
' Define Output Data Tables
'---------------------------------------------
'Time series data
DataTable (Time_Series, TRUE, -1)
  DataInterval (0, SCN_INTV, mSec, 100)
  TableFile ("CRD:"&Status.SerialNumber(1,1)&".Time_Series_", 64, -1, 0, DAY_TSRS_CRD, Day, 0, 0)

  'sonic time series output
  Sample (20, Ux_B4, IEEE4)

  'IRGA time series output
  Sample (8, co2_B4,IEEE4)

  'FW time series output
  Sample (1, FW_B2, IEEE4)

  'T & RH output
  Sample (2, Tair_B4, FP2)
  Sample (2, Tair_B2, FP2)
  
EndTable


'Meterological data
DataTable (RMet_1Min, TRUE, -1)
  DataInterval (0,1,Min,10)
  TableFile ("CRD:"&Status.SerialNumber(1,1)&".Met_1Min", 64, -1, 0, DAY_RMET_CRD, Day, 0, 0)

  'Sonic data
  Average (1,Ts_B4,IEEE4,disable_stats_sonic(1))
  StdDev  (1,Ts_B4,IEEE4,disable_stats_sonic(1))
  Average (1,Ts_B3,IEEE4,disable_stats_sonic(3))
  StdDev  (1,Ts_B3,IEEE4,disable_stats_sonic(3))
  Average (1,Ts_B2,IEEE4,disable_stats_sonic(5))
  StdDev  (1,Ts_B2,IEEE4,disable_stats_sonic(5))
  Average (1,Ts_B1,IEEE4,disable_stats_sonic(7))
  StdDev  (1,Ts_B1,IEEE4,disable_stats_sonic(7))
  Average (1,Ux_B4,IEEE4,disable_stats_sonic(1))
  StdDev  (1,Ux_B4,IEEE4,disable_stats_sonic(1))
  Average (1,Ux_B3,IEEE4,disable_stats_sonic(3))
  StdDev  (1,Ux_B3,IEEE4,disable_stats_sonic(3))
  Average (1,Ux_B2,IEEE4,disable_stats_sonic(5))
  StdDev  (1,Ux_B2,IEEE4,disable_stats_sonic(5))
  Average (1,Ux_B1,IEEE4,disable_stats_sonic(7))
  StdDev  (1,Ux_B1,IEEE4,disable_stats_sonic(7))
  Average (1,Uy_B4,IEEE4,disable_stats_sonic(1))
  StdDev  (1,Uy_B4,IEEE4,disable_stats_sonic(1))
  Average (1,Uy_B3,IEEE4,disable_stats_sonic(3))
  StdDev  (1,Uy_B3,IEEE4,disable_stats_sonic(3))
  Average (1,Uy_B2,IEEE4,disable_stats_sonic(5))
  StdDev  (1,Uy_B2,IEEE4,disable_stats_sonic(5))
  Average (1,Uy_B1,IEEE4,disable_stats_sonic(7))
  StdDev  (1,Uy_B1,IEEE4,disable_stats_sonic(7))
  Average (1,Uz_B4,IEEE4,disable_stats_sonic(1))
  StdDev  (1,Uz_B4,IEEE4,disable_stats_sonic(1))
  Average (1,Uz_B3,IEEE4,disable_stats_sonic(3))
  StdDev  (1,Uz_B3,IEEE4,disable_stats_sonic(3))
  Average (1,Uz_B2,IEEE4,disable_stats_sonic(5))
  StdDev  (1,Uz_B2,IEEE4,disable_stats_sonic(5))
  Average (1,Uz_B1,IEEE4,disable_stats_sonic(7))
  StdDev  (1,Uz_B1,IEEE4,disable_stats_sonic(7))

  WindVector (1,Uy_B4,Ux_B4,IEEE4,disable_stats_sonic(1),0,1,2)
  FieldNames ("ws_B4,ws_rslt_B4,wd_csat_B4,wd_sigma_B4")
  WindVector (1,Uy_B3,Ux_B3,IEEE4,disable_stats_sonic(3),0,1,2)
  FieldNames ("ws_B3,ws_rslt_B3,wd_csat_B3,wd_sigma_B3")
  WindVector (1,Uy_B2,Ux_B2,IEEE4,disable_stats_sonic(5),0,1,2)
  FieldNames ("ws_B2,ws_rslt_B2,wd_csat_B2,wd_sigma_B2")
  WindVector (1,Uy_B1,Ux_B1,IEEE4,disable_stats_sonic(7),0,1,2)
  FieldNames ("ws_B1,ws_rslt_B1,wd_csat_B1,wd_sigma_B1")

  'Irga data
  Average (1,co2_B4,IEEE4,False)
  StdDev  (1,co2_B4,IEEE4,False)
  Average (1,co2_B2,IEEE4,False)
  StdDev  (1,co2_B2,IEEE4,False)
  Average (1,h2o_B4,IEEE4,False)
  StdDev  (1,h2o_B4,IEEE4,False)
  Average (1,h2o_B2,IEEE4,False)
  StdDev  (1,h2o_B2,IEEE4,False)
  Average (1,mco2_B4,IEEE4,False)
  StdDev  (1,mco2_B4,IEEE4,False)
  Average (1,mco2_B2,IEEE4,False)
  StdDev  (1,mco2_B2,IEEE4,False)
  Average (1,Press_irga_B4,IEEE4,False)
  Average (1,Press_irga_B2,IEEE4,False)
  
  'T & RH data
  Average (8,Tair_B4,IEEE4,False)

  'LI190R
  Average  (1, PAR_density_B2, IEEE4,False)
  Sample (1, QUANTUM_SENS, FP2)

  'FW3
  Average  (1, FW_B2, IEEE4,False) 

  Average (1,PTemp_C,IEEE4,False)
  Average (1,RTemp_C,IEEE4,False)
  Average (1,BattV,IEEE4,False)

EndTable

'Status data
DataTable (Stats_30Min, TRUE, -1)
  DataInterval (0,30,Min,10)
  TableFile ("CRD:"&Status.SerialNumber(1,1)&".Stats_30Min", 64, -1, 0, DAY_RMET_CRD, Day, 0, 0)

  'Sonic data
  Average (1,Ts_B4,IEEE4,disable_stats_sonic(1))
  StdDev  (1,Ts_B4,IEEE4,disable_stats_sonic(1))
  Average (1,Ts_B3,IEEE4,disable_stats_sonic(3))
  StdDev  (1,Ts_B3,IEEE4,disable_stats_sonic(3))
  Average (1,Ts_B2,IEEE4,disable_stats_sonic(5))
  StdDev  (1,Ts_B2,IEEE4,disable_stats_sonic(5))
  Average (1,Ts_B1,IEEE4,disable_stats_sonic(7))
  StdDev  (1,Ts_B1,IEEE4,disable_stats_sonic(7))
  Average (1,Ux_B4,IEEE4,disable_stats_sonic(1))
  StdDev  (1,Ux_B4,IEEE4,disable_stats_sonic(1))
  Average (1,Ux_B3,IEEE4,disable_stats_sonic(3))
  StdDev  (1,Ux_B3,IEEE4,disable_stats_sonic(3))
  Average (1,Ux_B2,IEEE4,disable_stats_sonic(5))
  StdDev  (1,Ux_B2,IEEE4,disable_stats_sonic(5))
  Average (1,Ux_B1,IEEE4,disable_stats_sonic(7))
  StdDev  (1,Ux_B1,IEEE4,disable_stats_sonic(7))
  Average (1,Uy_B4,IEEE4,disable_stats_sonic(1))
  StdDev  (1,Uy_B4,IEEE4,disable_stats_sonic(1))
  Average (1,Uy_B3,IEEE4,disable_stats_sonic(3))
  StdDev  (1,Uy_B3,IEEE4,disable_stats_sonic(3))
  Average (1,Uy_B2,IEEE4,disable_stats_sonic(5))
  StdDev  (1,Uy_B2,IEEE4,disable_stats_sonic(5))
  Average (1,Uy_B1,IEEE4,disable_stats_sonic(7))
  StdDev  (1,Uy_B1,IEEE4,disable_stats_sonic(7))
  Average (1,Uz_B4,IEEE4,disable_stats_sonic(1))
  StdDev  (1,Uz_B4,IEEE4,disable_stats_sonic(1))
  Average (1,Uz_B3,IEEE4,disable_stats_sonic(3))
  StdDev  (1,Uz_B3,IEEE4,disable_stats_sonic(3))
  Average (1,Uz_B2,IEEE4,disable_stats_sonic(5))
  StdDev  (1,Uz_B2,IEEE4,disable_stats_sonic(5))
  Average (1,Uz_B1,IEEE4,disable_stats_sonic(7))
  StdDev  (1,Uz_B1,IEEE4,disable_stats_sonic(7))

  WindVector (1,Uy_B4,Ux_B4,IEEE4,disable_stats_sonic(1),0,1,2)
  FieldNames ("ws_B4,ws_rslt_B4,wd_csat_B4,wd_sigma_B4")
  WindVector (1,Uy_B3,Ux_B3,IEEE4,disable_stats_sonic(3),0,1,2)
  FieldNames ("ws_B3,ws_rslt_B3,wd_csat_B3,wd_sigma_B3")
  WindVector (1,Uy_B2,Ux_B2,IEEE4,disable_stats_sonic(5),0,1,2)
  FieldNames ("ws_B2,ws_rslt_B2,wd_csat_B2,wd_sigma_B2")
  WindVector (1,Uy_B1,Ux_B1,IEEE4,disable_stats_sonic(7),0,1,2)
  FieldNames ("ws_B1,ws_rslt_B1,wd_csat_B1,wd_sigma_B1")

  'Irga data
  Average (1,co2_B4,IEEE4,False)
  StdDev  (1,co2_B4,IEEE4,False)
  Average (1,co2_B2,IEEE4,False)
  StdDev  (1,co2_B2,IEEE4,False)
  Average (1,h2o_B4,IEEE4,False)
  StdDev  (1,h2o_B4,IEEE4,False)
  Average (1,h2o_B2,IEEE4,False)
  StdDev  (1,h2o_B2,IEEE4,False)
  Average (1,mco2_B4,IEEE4,False)
  StdDev  (1,mco2_B4,IEEE4,False)
  Average (1,mco2_B2,IEEE4,False)
  StdDev  (1,mco2_B2,IEEE4,False)
  Average (1,Press_irga_B4,IEEE4,False)
  Average (1,Press_irga_B2,IEEE4,False)
  
  'T & RH data
  Average (8,Tair_B4,IEEE4,False)

  'LI190R
  Average  (1, PAR_density_B2, IEEE4,False)
  Sample (1, QUANTUM_SENS, FP2)

  'FW3
  Average  (1, FW_B2, IEEE4,False)

  'CSATB Monitor
  Average (12,Btemp_B4,IEEE4,False)

  ' sonic flag
  Totalize (1,1,IEEE4,disable_stats_sonic(1))
  Totalize (1,1,IEEE4,NOT (disable_stats_sonic(1) OR disable_stats_sonic(2)))
  FieldNames ("csat_warnings_B4")
  Totalize (1,1,IEEE4,NOT (FLowAmp_B4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_LowAmp_Tot_B4")
  Totalize (1,1,IEEE4,NOT (FHighAmp_B4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_HighAmp_Tot_B4")
  Totalize (1,1,IEEE4,NOT (FTracking_B4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_Tracking_Tot_B4")
  Totalize (1,1,IEEE4,NOT (FHighDeltaC_B4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_HighDeltaC_Tot_B4")
  Totalize (1,1,IEEE4,NOT (FAcq_B4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_Acq_Tot_B4")
  Totalize (1,1,IEEE4,NOT (FLowVolt_B4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_LowVolt_Tot_B4")
  Totalize (1,1,IEEE4,NOT (FMemErr_B4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_MemErr_Tot_B4")
  Totalize (1,1,IEEE4,NOT (FADCSkip_B4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_ADCSkip_Tot_B4")
  Totalize (1,1,IEEE4,NOT (FTrigErr_B4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_TrigErr_Tot_B4")

  Totalize (1,1,IEEE4,disable_stats_sonic(3))
  Totalize (1,1,IEEE4,NOT (disable_stats_sonic(3) OR disable_stats_sonic(4)))
  FieldNames ("csat_warnings_B3")
  Totalize (1,1,IEEE4,NOT (FLowAmp_B3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_LowAmp_Tot_B3")
  Totalize (1,1,IEEE4,NOT (FHighAmp_B3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_HighAmp_Tot_B3")
  Totalize (1,1,IEEE4,NOT (FTracking_B3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_Tracking_Tot_B3")
  Totalize (1,1,IEEE4,NOT (FHighDeltaC_B3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_HighDeltaC_Tot_B3")
  Totalize (1,1,IEEE4,NOT (FAcq_B3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_Acq_Tot_B3")
  Totalize (1,1,IEEE4,NOT (FLowVolt_B3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_LowVolt_Tot_B3")
  Totalize (1,1,IEEE4,NOT (FMemErr_B3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_MemErr_Tot_B3")
  Totalize (1,1,IEEE4,NOT (FADCSkip_B3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_ADCSkip_Tot_B3")
  Totalize (1,1,IEEE4,NOT (FTrigErr_B3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_TrigErr_Tot_B3")

  Totalize (1,1,IEEE4,disable_stats_sonic(5))
  Totalize (1,1,IEEE4,NOT (disable_stats_sonic(5) OR disable_stats_sonic(6)))
  FieldNames ("csat_warnings_B2")
  Totalize (1,1,IEEE4,NOT (FLowAmp_B2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_LowAmp_Tot_B2")
  Totalize (1,1,IEEE4,NOT (FHighAmp_B2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_HighAmp_Tot_B2")
  Totalize (1,1,IEEE4,NOT (FTracking_B2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_Tracking_Tot_B2")
  Totalize (1,1,IEEE4,NOT (FHighDeltaC_B2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_HighDeltaC_Tot_B2")
  Totalize (1,1,IEEE4,NOT (FAcq_B2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_Acq_Tot_B2")
  Totalize (1,1,IEEE4,NOT (FLowVolt_B2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_LowVolt_Tot_B2")
  Totalize (1,1,IEEE4,NOT (FMemErr_B2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_MemErr_Tot_B2")
  Totalize (1,1,IEEE4,NOT (FADCSkip_B2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_ADCSkip_Tot_B2")
  Totalize (1,1,IEEE4,NOT (FTrigErr_B2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_TrigErr_Tot_B2")

  Totalize (1,1,IEEE4,disable_stats_sonic(7))
  Totalize (1,1,IEEE4,NOT (disable_stats_sonic(7) OR disable_stats_sonic(8)))
  FieldNames ("csat_warnings_B1")
  Totalize (1,1,IEEE4,NOT (FLowAmp_B1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_LowAmp_Tot_B1")
  Totalize (1,1,IEEE4,NOT (FHighAmp_B1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_HighAmp_Tot_B1")
  Totalize (1,1,IEEE4,NOT (FTracking_B1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_Tracking_Tot_B1")
  Totalize (1,1,IEEE4,NOT (FHighDeltaC_B1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_HighDeltaC_Tot_B1")
   
  Average (1,PTemp_C,IEEE4,False)
  Average (1,RTemp_C,IEEE4,False)
  Average (1,BattV,IEEE4,False)

EndTable


'---------------------------------------------
' MAIN PROGRAM 
'---------------------------------------------
BeginProg
 
'set original variables to NaN
Move (sonic(1),20,NaN,20)
	
'Set all LI-7500 variables to NaN.
Move (irga(1),8,NaN,8)

'Set FW variables to NaN.
Move (FW_B2,1,NaN,1)
	
'Set 3.3 VDC for pps
PortPairConfig (C1, 2)

'Set SDM clock speed
SDMSpeed (SDM_PER)
Scan (SCN_INTV, mSec, SCAN_BUFFER_SIZE, 0)
  'Trigger all SDM instruments to make measurements
  SDMTrigger()
  
  PanelTemp (PTemp_C,250) 'Measure data logger panel temperature

  'FW3 fine-wire thermocouple
  TCDiff (FW_B2, 1, mV200, FW_ANALOG_INPUT, TypeE, PTemp_C, TRUE, 450, 250, 1, 0)

  'CSAT3B three dimensional sonic anemometer 
  CSAT3B(sonic(1),0,CSAT_SDM_ADDR_B4,0)
  CSAT3B(sonic(6),0,CSAT_SDM_ADDR_B3,0)
  CSAT3B(sonic(11),0,CSAT_SDM_ADDR_B2,0)
  CSAT3(sonic(16),1,CSAT_SDM_ADDR_B1,98,CSAT_OPT)

  'LI7500RS infrared CO2/H2O gas analyzer
  CS7500(irga(1),1,IRGA_SDM_ADDR_B4,7)
  CS7500(irga(5),1,IRGA_SDM_ADDR_B2,7)
	
  'Break up the sonic warning flags into separate bits.
  diag_integer = diag_sonic_B4
  diag_bits_sonic(1) = diag_integer AND &h00000001
  diag_bits_sonic(2) = diag_integer AND &h00000002
  diag_bits_sonic(3) = diag_integer AND &h00000004
  diag_bits_sonic(4) = diag_integer AND &h00000008
  diag_bits_sonic(5) = diag_integer AND &h00000010
  diag_bits_sonic(6) = diag_integer AND &h00000020
  diag_bits_sonic(7) = diag_integer AND &h00000040
  diag_bits_sonic(8) = diag_integer AND &h00000080
  diag_bits_sonic(9) = diag_integer AND &h00000100
  'Turn on this intermediate processing disable flag when any
  'warning flag is set or the data returned is NaN
  disable_stats_sonic(1) = ((diag_integer AND &hffffffff) OR (diag_sonic_B4 = NaN))
  'Turn on this intermediate processing disable flag only when
  'CSAT3B diagnostic warning flags are set
  disable_stats_sonic(2) = ((diag_integer AND &hffffffff) AND NOT (diag_sonic_B4 = NaN))
 
  diag_integer = diag_sonic_B3
  diag_bits_sonic(10) = diag_integer AND &h00000001
  diag_bits_sonic(11) = diag_integer AND &h00000002
  diag_bits_sonic(12) = diag_integer AND &h00000004
  diag_bits_sonic(13) = diag_integer AND &h00000008
  diag_bits_sonic(14) = diag_integer AND &h00000010
  diag_bits_sonic(15) = diag_integer AND &h00000020
  diag_bits_sonic(16) = diag_integer AND &h00000040
  diag_bits_sonic(17) = diag_integer AND &h00000080
  diag_bits_sonic(18) = diag_integer AND &h00000100
  'Turn on this intermediate processing disable flag when any
  'warning flag is set or the data returned is NaN
  disable_stats_sonic(3) = ((diag_integer AND &hffffffff) OR (diag_sonic_B3 = NaN))
  'Turn on this intermediate processing disable flag only when
  'CSAT3B diagnostic warning flags are set
  disable_stats_sonic(4) = ((diag_integer AND &hffffffff) AND NOT (diag_sonic_B3 = NaN))

  diag_integer = diag_sonic_B2
  diag_bits_sonic(19) = diag_integer AND &h00000001
  diag_bits_sonic(20) = diag_integer AND &h00000002
  diag_bits_sonic(21) = diag_integer AND &h00000004
  diag_bits_sonic(22) = diag_integer AND &h00000008
  diag_bits_sonic(23) = diag_integer AND &h00000010
  diag_bits_sonic(24) = diag_integer AND &h00000020
  diag_bits_sonic(25) = diag_integer AND &h00000040
  diag_bits_sonic(26) = diag_integer AND &h00000080
  diag_bits_sonic(27) = diag_integer AND &h00000100
  'Turn on this intermediate processing disable flag when any
  'warning flag is set or the data returned is NaN
  disable_stats_sonic(5) = ((diag_integer AND &hffffffff) OR (diag_sonic_B2 = NaN))
  'Turn on this intermediate processing disable flag only when
  'CSAT3B diagnostic warning flags are set
  disable_stats_sonic(6) = ((diag_integer AND &hffffffff) AND NOT (diag_sonic_B2 = NaN))

  diag_integer = diag_sonic_B1
  diag_bits_sonic(28) = diag_integer AND &h1000
  diag_bits_sonic(29) = diag_integer AND &h2000
  diag_bits_sonic(30) = diag_integer AND &h4000
  diag_bits_sonic(31) = diag_integer AND &h8000
  'Turn on this intermediate processing disable flag when any
  'warning flag is set or the data returned is NaN
  disable_stats_sonic(7) = ((diag_integer AND &hf000) OR (diag_sonic_B1 = NaN))
  'Turn on this intermediate processing disable flag only when
  'CSAT3B diagnostic warning flags are set
  disable_stats_sonic(8) = ((diag_integer AND &hf000) AND NOT (diag_sonic_B1 = NaN))

  '-------------------------------------------------------------------
  'Convert LI-7500 data from molar density [mmol/m^3] to mass density.
  ' 44 [g/mol] - molecular weight of carbon dioxide
  ' 0.018 [g/mmol] - molecular weight of water vapor
  '-------------------------------------------------------------------
  If ( NOT (co2_B4 = -99999) ) Then ( co2_B4 = co2_B4*44 )
  h2o_B4 = h2o_B4*0.018
  If ( NOT (co2_B2 = -99999) ) Then ( co2_B2 = co2_B2*44 )
  h2o_B2 = h2o_B2*0.018
   
  'Compute CO2 molar density by molar fraction (ppm)
   divisor = (Press_irga_B4/(R*(Ts_B4+273.15)))-(h2o_B4/18)
   mco2_B4 = co2_B4/(0.04401*divisor)
   divisor = (Press_irga_B2/(R*(Ts_B2+273.15)))-(h2o_B2/18)
   mco2_B2 = co2_B2/(0.04401*divisor)

  'Save time series data.
  CallTable Time_Series

  'Save meterological data
  CallTable RMet_1Min

  'Save status data
  CallTable Stats_30Min

NextScan

SlowSequence

Scan (SLW_SCN_INTV,mSec,10,0)
  Battery (BattV)         'Measure battery voltage.

  'CSAT3B three dimensional sonic anemometer 
  CSAT3BMonitor(monitor(1),0,CSAT_SDM_ADDR_B4)
  CSAT3BMonitor(monitor(5),0,CSAT_SDM_ADDR_B3)
  CSAT3BMonitor(monitor(9),0,CSAT_SDM_ADDR_B2)

  'LI190R quantum (PAR) sensor
  VoltDiff (PAR_density_B2, 1, mV200, QUANTUM_ANALOG_INPUT, True, 0, ANALOG_INTEGRATION, 1, 0)
  If (PAR_density_B2 >= 0) Then
    PAR_density_B2 = 0
  Else
    PAR_density_B2 = -QUANTUM_MULT*PAR_density_B2 + QUANTUM_OFFSET
  EndIf

  'Temperature and relative humidity probe
  AM25T(Tair_B1,2,mV1000,1,AM25T_DiffChan,-1,RTemp_C,AM25T_ClkPort,AM25T_ResPort,AM25T_ExChan,True,0,ANALOG_INTEGRATION,1,0)
  AM25T(Tair_B2,2,mV1000,3,AM25T_DiffChan,-1,RTemp_C,AM25T_ClkPort,AM25T_ResPort,AM25T_ExChan,True,0,ANALOG_INTEGRATION,1,0)
  AM25T(Tair_B3,2,mV1000,5,AM25T_DiffChan,-1,RTemp_C,AM25T_ClkPort,AM25T_ResPort,AM25T_ExChan,True,0,ANALOG_INTEGRATION,1,0)
  AM25T(Tair_B4,2,mV1000,7,AM25T_DiffChan,-1,RTemp_C,AM25T_ClkPort,AM25T_ResPort,AM25T_ExChan,True,0,ANALOG_INTEGRATION,1,0)
  Tair_B4 = Tair_B4 * TMPR_MULT_B4 + TMPR_OFFSET_B4
  RH_B4   = RH_B4 * RH_MULT + RH_OFFSET
  Tair_B3 = Tair_B3 * TMPR_MULT + TMPR_OFFSET
  RH_B3   = RH_B3 * RH_MULT + RH_OFFSET
  Tair_B2 = Tair_B2 * TMPR_MULT + TMPR_OFFSET
  RH_B2   = RH_B2 * RH_MULT + RH_OFFSET
  Tair_B1 = Tair_B1 * TMPR_MULT + TMPR_OFFSET
  RH_B1   = RH_B1 * RH_MULT + RH_OFFSET

  If (RH_B4 > 100 AND RH_B4 <103) Then (RH_B4 =100)
  If (RH_B3 > 100 AND RH_B3 <103) Then (RH_B3 =100)
  If (RH_B2 > 100 AND RH_B2 <103) Then (RH_B2 =100)
  If (RH_B1 > 100 AND RH_B1 <103) Then (RH_B1 =100)

  'GPS16X-HVS
  GPS (gps_data(1),GPS16X_COM,UTC_OFFSET*3600,MAX_CLOCK_DRIFT,nmea_sentence(1))

NextScan

EndProg
