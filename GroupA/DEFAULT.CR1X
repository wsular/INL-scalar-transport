'CR1000X Series Datalogger
'Copyright (c) 2020 Washington State University. Adapted with permission.

'Date: August 2020
'Program author: Zhongming Gao 
'CR1000X for Group A @ 40 m (A.2.CR1000X)

'The following sensors are measured:
'CSAT3B three dimensional sonic anemometer  x  4
'LI7500RS infrared CO2/H2O gas analyzer     x  3
'Temperature and relative humidity probe    x  4
'CNR4 4-component net radiometer            x  1
'LI190R quantum (PAR) sensor                x  1
'FW3 fine-wire thermocouple                 x  1
'GPS                                        x  1
'AM25T      				    x  1

'Abbreviations in comments and variables
'CR1K   CR1000X
'CSAT   CSAT3A or CSAT3B
'sonic  CSAT3A or CSAT3B
'CS6XX  CS616, CS650, or CS655
'CS65X  CS650 or CS655
'cumul  cumulative
'dia    diameter
'diag   dignosis
'dir    direction
'dist   distance
'flg    flag
'FP     footprint
'Freq   frequency
'FW     FW05, FW1, or FW3. FW is an abbreviation for fine wire thermocouple
'intrst interest
'IRGA   LI7500, LI7500A, or LI7500RS InfraRed Gas Analyzer
'nmbr   number
'pct    percent
'Pyran  pyranometer
'RH     relative humidity
'rng    range
'QC     quality control or quality classification
'shf    soil heat flux
'shfp   soil heat flux plate
'sig    signal
'strgth strength
'within win
'wnd    wind
'wtr    water
'hfp01xx HFP01 or HFP01SC soil heat flux plate sensor

'*** Unit Definitions ***
'SYMBOL      UNIT
'C           Celsius
'degrees     angle degrees
'frac_v_wtr  Fraction volumetric water content
'g           grams
'J           Joules
'Hz          Hertz
'kg          kilograms
'kPa         kilopascals
'm           meters
'mg          milligrams
'mmol        millimole
'mol         mole
'ms          millisecond
's           seconds
'umol        micromoles
'usecond     microsecond
'V           volts
'W           Watts


PipeLineMode
SDMBeginPort(C5)  'Use C5, C6, and C7 as the SMD port since C1 is used for GPS PPS.

'---------------------------------------------
' Declare Constants
'---------------------------------------------
Const SCN_INTV                   = 100           'Unique: measurement rate 100 ms (10 Hz), 200 ms (5 Hz), or 1000 ms (1 Hz)
Const SLW_SCN_INTV               = 2000          'Unique: slow sequence measurement rate (ms) >3000 ms and <6000ms (Note: SDI-12 sensors too slow for sub-second intervals)
Const OUTPUT_INTV                = 5             'Unique: online flux data output interval (minutes).
Const DAY_RMET_CRD               = 30            'Unique: number of days of Flux and Flux_Notes table data to store in each file on the card.  Number of files stored depends on card size.
Const DAY_TSRS_CRD               = 1             'Unique: number of days of Time_Series table data to store in each file on the card (days). Number of files stored depends on card size.
Const SDM_PER                    = 30            'Unique: default SDM clock speed (uS).

Const ANALOG_INTEGRATION         = 15000         'Unique: slowsequence analog measurement integration time, _60Hz (e.g. in US, Canada, etc.) or _50Hz (e.g. in Europe, China, etc.)

Const SCAN_BUFFER_SIZE           = 290*INT (1000/SCN_INTV) 'Compute a 290-second scan buffer (The buffer less than 5 minutes is required because of 5-minute interval for data tables used in QC.

Const NMBR_DAY_CPU               = 7          'Number of days for flux data to store on the CPU.
Const FLUX_SIZE_CPU              = Ceiling ((NMBR_DAY_CPU*1440)/OUTPUT_INTV) 'Size of flux data table on CPU [(days*1440 minutes/day)/(minutes/record)] = records].

Const R       = 8.3143e-3          'Universal gas constant [kPa m^3/(K mol)]

'CSAT3B three dimensional sonic anemometer  x  4
Const CSAT_SDM_ADDR_A4           = 1           'Unique: SDM address for CSAT3B @ 60 m (A.4.CSAT3B).
Const CSAT_SDM_ADDR_A3           = 2           'Unique: SDM address for CSAT3B @ 50 m (A.3.CSAT3B).
Const CSAT_SDM_ADDR_A2           = 3           'Unique: SDM address for CSAT3B @ 40 m (A.2.CSAT3B).
Const CSAT_SDM_ADDR_A1           = 9           'Unique: SDM address for CSAT3B @ 30 m (A.1.CSAT3B).

'LI7500RS infrared CO2/H2O gas analyzer     x  3
Const IRGA_SDM_ADDR_A4           = 5           'Unique: SDM address for IRGA @ 60 m (A.4.IRGA).
Const IRGA_SDM_ADDR_A2           = 7           'Unique: SDM address for IRGA @ 40 m (A.2.IRGA).
Const IRGA_SDM_ADDR_A1           = 8           'Unique: SDM address for IRGA @ 30 m (A.1.IRGA).

'AM25T      				    x  1
Const AM25T_DiffChan             =  1          'AM25T Common high & low
Const AM25T_ClkPort              =  C3         'AM25T Clock
Const AM25T_ResPort              =  C4         'AM25T Reset
Const AM25T_ExChan               =  Vx1        'AM25T PRT excitation

'CNR4 4-component net radiometer            x  1
Const NR_ANALOG_INPUT            = 5           'Starting differential analog input channel for a net radiation sensor.
Const T_NR_ANALOG_INPUT          = 2           'Differential analog input channel to measure body temperature of 4-way radiation sensor. For a single-end analog input channel (2*T_NR_ANALOG_INPUT-1)
Const T_NR_VOLTAGE_EXCITATION    = Vx2         'Voltage excitation channel.
Const CNR4_SW_IN_CAL             = 1000/11.63  'Unique: multiplier for CNR4 shortwave downwelling radiation (1000/sensitivity).
Const CNR4_SW_OUT_CAL            = 1000/12.84  'Unique: multiplier for CNR4 shortware upwelling radiation (1000/sensitivity).
Const CNR4_LW_IN_CAL             = 1000/12.16  'Unique: multiplier for CNR4 longwave downwelling radiation (1000/sensitivity).
Const CNR4_LW_OUT_CAL            = 1000/10.61  'Unique: multiplier for CNR4 longwave upwelling radiation (1000/sensitivity).

'LI190R quantum (PAR) sensor                x  1
Const QUANTUM_SENS          = 6.95  'uA per 1000 umol/m^2/s
Const QUANTUM_ANALOG_INPUT  = 3     'Differential analog input channel for quantum PAR sensor
Const QUANTUM_MULT          = 1000/(QUANTUM_SENS*0.604)   'Unique: multiplier (1000 C) for quantum PAR sensor.
Const QUANTUM_OFFSET        = 0     'Unique: offset for for quantum PAR sensor.


'FW3 fine-wire thermocouple                 x  1
Const FW_ANALOG_INPUT  = 4          'Differential analog input channel for FW (Input channel 5 or 11 is recommended)

'Temperature and relative humidity probe    x  4 @ AM25T
Const TMPR_RH_ANALOG_INPUT = 1                 'Starting differential analog input channel (AM25T) for temperature and humidity probe.
Const TMPR_MULT_A4     As Float    = 0.14             'Unique: temperature multiplier HMP155A = 0.14
Const TMPR_OFFSET_A4   As Float    = -80.0            'Unique: temperature offset HC2S3 = -40, HMP155A = -80, or HMP45C = -40.
Const TMPR_MULT        As Float    = 0.1              'Unique: temperature multiplier HC2S3 = 0.1
Const TMPR_OFFSET      As Float    = -40              'Unique: temperature offset HC2S3 = -40
Const RH_MULT          As Float    = 0.1              'Unique: RH multiplier HC2S3 = 0.1, HMP155A = 0.1, or HMP45C = 0.1
Const RH_OFFSET        As Float    = 0.0              'Unique: RH offset HC2S3 = 0, HMP155A = 0, or HMP45C = 0.

'GPS                                        x  1
Const GPS16X_COM = ComC1      'Serial port for GPS16X with PPS
Const UTC_OFFSET = -7        'local time offset from UTC, in hours = Mountain Standard Time
Const MAX_CLOCK_DRIFT = 20  'max clock drift permitted before setting clock, in msec


'--------------------------------------------------------
' Declare Variables, Aliases, and Units
'---------------------------------------------------------
'CSAT3B three dimensional sonic anemometer  x  4
Public sonic(20)                          'Hold sonic data aligned in scan with data from IRGA and/or
Alias  sonic(1) = Ux_A4
Alias  sonic(2) = Uy_A4
Alias  sonic(3) = Uz_A4
Alias  sonic(4) = Ts_A4
Alias  sonic(5) = diag_sonic_A4
Alias  sonic(6) = Ux_A3
Alias  sonic(7) = Uy_A3
Alias  sonic(8) = Uz_A3
Alias  sonic(9) = Ts_A3
Alias  sonic(10) = diag_sonic_A3
Alias  sonic(11) = Ux_A2
Alias  sonic(12) = Uy_A2
Alias  sonic(13) = Uz_A2
Alias  sonic(14) = Ts_A2
Alias  sonic(15) = diag_sonic_A2
Alias  sonic(16) = Ux_A1
Alias  sonic(17) = Uy_A1
Alias  sonic(18) = Uz_A1
Alias  sonic(19) = Ts_A1
Alias  sonic(20) = diag_sonic_A1
Units  Ux_A4 = m/s
Units  Uy_A4 = m/s
Units  Uz_A4 = m/s
Units  Ts_A4 = degC
Units  diag_sonic_A4 = unitless
Units  Ux_A3 = m/s
Units  Uy_A3 = m/s
Units  Uz_A3 = m/s
Units  Ts_A3 = degC
Units  diag_sonic_A3 = unitless
Units  Ux_A2 = m/s
Units  Uy_A2 = m/s
Units  Uz_A2 = m/s
Units  Ts_A2 = degC
Units  diag_sonic_A2 = unitless
Units  Ux_A1 = m/s
Units  Uy_A1 = m/s
Units  Uz_A1 = m/s
Units  Ts_A1 = degC
Units  diag_sonic_A1 = unitless

'CSAT3B monitor outputs
Public monitor(16)
Alias  monitor(1)  = Btemp_A4     'Board Temperature
Alias  monitor(2)  = Bhumidity_A4 'Board Relative Humidity
Alias  monitor(3)  = Ipitch_A4    'Inclinometer Pitch
Alias  monitor(4)  = Iroll_A4     'Inclinometer Roll
Alias  monitor(5)  = Btemp_A3     'Board Temperature
Alias  monitor(6)  = Bhumidity_A3 'Board Relative Humidity
Alias  monitor(7)  = Ipitch_A3    'Inclinometer Pitch
Alias  monitor(8)  = Iroll_A3     'Inclinometer Roll
Alias  monitor(9)  = Btemp_A2     'Board Temperature
Alias  monitor(10) = Bhumidity_A2 'Board Relative Humidity
Alias  monitor(11) = Ipitch_A2    'Inclinometer Pitch
Alias  monitor(12) = Iroll_A2     'Inclinometer Roll
Alias  monitor(13) = Btemp_A1     'Board Temperature
Alias  monitor(14) = Bhumidity_A1 'Board Relative Humidity
Alias  monitor(15) = Ipitch_A1    'Inclinometer Pitch
Alias  monitor(16) = Iroll_A1     'Inclinometer Roll
Units  Btemp_A4     = degC
Units  Bhumidity_A4 = %
Units  Ipitch_A4    = deg
Units  Iroll_A4     = deg
Units  Btemp_A3     = degC
Units  Bhumidity_A3 = %
Units  Ipitch_A3    = deg
Units  Iroll_A3     = deg
Units  Btemp_A2     = degC
Units  Bhumidity_A2 = %
Units  Ipitch_A2    = deg
Units  Iroll_A2     = deg
Units  Btemp_A1     = degC
Units  Bhumidity_A1 = %
Units  Ipitch_A1    = deg
Units  Iroll_A1     = deg

'CSAT3B diagnostic flags
Public diag_bits_sonic(36) As Boolean
Alias diag_bits_sonic(1)  = FLowAmp_A4      'Low Amplitude Flag
Alias diag_bits_sonic(2)  = FHighAmp_A4     'High Amplitude Flag
Alias diag_bits_sonic(3)  = FTracking_A4    'Tracking Flag
Alias diag_bits_sonic(4)  = FHighDeltaC_A4  'High Delta Speed of Sound Flag
Alias diag_bits_sonic(5)  = FAcq_A4         'Acquiring Flag
Alias diag_bits_sonic(6)  = FLowVolt_A4     'Low Supply Voltage Flag
Alias diag_bits_sonic(7)  = FMemErr_A4      'Memory Error Flag
Alias diag_bits_sonic(8)  = FADCSkip_A4     'ADC Clock Error Flag
Alias diag_bits_sonic(9)  = FTrigErr_A4     'Trigger Error Flag
Alias diag_bits_sonic(10) = FLowAmp_A3      'Low Amplitude Flag
Alias diag_bits_sonic(11) = FHighAmp_A3     'High Amplitude Flag
Alias diag_bits_sonic(12) = FTracking_A3    'Tracking Flag
Alias diag_bits_sonic(13) = FHighDeltaC_A3  'High Delta Speed of Sound Flag
Alias diag_bits_sonic(14) = FAcq_A3         'Acquiring Flag
Alias diag_bits_sonic(15) = FLowVolt_A3     'Low Supply Voltage Flag
Alias diag_bits_sonic(16) = FMemErr_A3      'Memory Error Flag
Alias diag_bits_sonic(17) = FADCSkip_A3     'ADC Clock Error Flag
Alias diag_bits_sonic(18) = FTrigErr_A3     'Trigger Error Flag
Alias diag_bits_sonic(19) = FLowAmp_A2      'Low Amplitude Flag
Alias diag_bits_sonic(20) = FHighAmp_A2     'High Amplitude Flag
Alias diag_bits_sonic(21) = FTracking_A2    'Tracking Flag
Alias diag_bits_sonic(22) = FHighDeltaC_A2  'High Delta Speed of Sound Flag
Alias diag_bits_sonic(23) = FAcq_A2         'Acquiring Flag
Alias diag_bits_sonic(24) = FLowVolt_A2     'Low Supply Voltage Flag
Alias diag_bits_sonic(25) = FMemErr_A2      'Memory Error Flag
Alias diag_bits_sonic(26) = FADCSkip_A2     'ADC Clock Error Flag
Alias diag_bits_sonic(27) = FTrigErr_A2     'Trigger Error Flag
Alias diag_bits_sonic(28) = FLowAmp_A1      'Low Amplitude Flag
Alias diag_bits_sonic(29) = FHighAmp_A1     'High Amplitude Flag
Alias diag_bits_sonic(30) = FTracking_A1    'Tracking Flag
Alias diag_bits_sonic(31) = FHighDeltaC_A1  'High Delta Speed of Sound Flag
Alias diag_bits_sonic(32) = FAcq_A1         'Acquiring Flag
Alias diag_bits_sonic(33) = FLowVolt_A1     'Low Supply Voltage Flag
Alias diag_bits_sonic(34) = FMemErr_A1      'Memory Error Flag
Alias diag_bits_sonic(35) = FADCSkip_A1     'ADC Clock Error Flag
Alias diag_bits_sonic(36) = FTrigErr_A1     'Trigger Error Flag

'LI7500RS infrared CO2/H2O gas analyzer     x  3
Public irga(12)
Alias irga(1)  = co2_A4
Alias irga(2)  = h2o_A4
Alias irga(3)  = sig_irga_A4
Alias irga(4)  = Press_irga_A4
Alias irga(5)  = co2_A2
Alias irga(6)  = h2o_A2
Alias irga(7)  = sig_irga_A2
Alias irga(8) = Press_irga_A2
Alias irga(9) = co2_A1
Alias irga(10) = h2o_A1
Alias irga(11) = sig_irga_A1
Alias irga(12) = Press_irga_A1

Units co2_A4        = mg/m^3
Units h2o_A4        = g/m^3
Units Press_irga_A4 = kPa
Units sig_irga_A4   = unitless
Units co2_A2        = mg/m^3
Units h2o_A2        = g/m^3
Units Press_irga_A2 = kPa
Units sig_irga_A2   = unitless
Units co2_A1        = mg/m^3
Units h2o_A1        = g/m^3
Units Press_irga_A1 = kPa
Units sig_irga_A1   = unitless

Public mco2(3)
Alias  mco2(1)  = mco2_A4
Alias  mco2(2)  = mco2_A2
Alias  mco2(3)  = mco2_A1
Units  mco2     = ppm

'Temperature and relative humidity probe    x  4
Public hmp(8)      
Alias hmp(1) = Tair_A4
Alias hmp(2) = RH_A4
Alias hmp(3) = Tair_A3
Alias hmp(4) = RH_A3
Alias hmp(5) = Tair_A2
Alias hmp(6) = RH_A2
Alias hmp(7) = Tair_A1
Alias hmp(8) = RH_A1
Units Tair_A4 = DegC
Units RH_A4   = %
Units Tair_A3 = DegC
Units RH_A3   = %
Units Tair_A2 = DegC
Units RH_A2   = %
Units Tair_A1 = DegC
Units RH_A1   = %

'CNR4 4-component net radiometer            x  1
Public Rn_raw                                 'Net radiation: Measured time series data

Public Rn                                     'Net radation: mean over an averaging interval
Units  Rn = W/m^2

Public nr(8)                       'Radiation components measured from a 4-way net radiometer.
Alias nr(1) = albedo
Alias nr(2) = R_SW_in              'Incoming (downwelling) short wave radiation
Alias nr(3) = R_SW_out             'Outgoing (upwelling) short wave radiation
Alias nr(4) = R_LW_in              'Incoming (downwelling) long wave radiation
Alias nr(5) = R_LW_out             'Outgoing (upwelling) long wave radiation
Alias nr(6) = T_nr                 'Sensor body temperature
Alias nr(7) = R_LW_in_meas         'Measured signal of incoming (downwelling) long wave radiation
Alias nr(8) = R_LW_out_meas        'Measured signal of outgoing (upwelling) long wave radiation
Units albedo        = unitless
Units R_SW_in       = W/m^2
Units R_SW_out      = W/m^2
Units R_LW_in       = W/m^2
Units R_LW_out      = W/m^2
Units T_nr          = Kelvin
Units R_LW_in_meas  = W/m^2
Units R_LW_out_meas = W/m^2

'YSI 44031 Steinhart-Hart coefficients fit through -40 degrees C (239800 ohms), 20 degrees C (12260 ohms), and 80 degrees C (1458 ohms).
Const A_SHH = 1.0295e-3           'Steinhart-Hart A coefficient (from Kipp & Znen through email April 16 2015).
Const B_SHH = 2.3910e-4           'Steinhart-Hart B coefficient (from Kipp & Znen through email April 16 2015).
Const C_SHH = 1.5680e-7           'Steinhart-Hart C coefficient (from Kipp & Znen through email April 16 2015).
Dim X_cnr4
Dim ln_R

'LI190R quantum (PAR) sensor                x  1
Public PAR_density_A2
Units  PAR_density_A2 = umol/(s m^2)

'FW3 fine-wire thermocouple                 x  1
Public FW_A2
Units  FW_A2 = degC

'GPS                                        x  1
Dim nmea_sentence(2) As String * 100

Public gps_data(15)
Alias gps_data(1) = latitude_deg            'Degrees latitude (+ = East; - = West)
Alias gps_data(2) = latitude_min            'Decimal minutes latitude
Alias gps_data(3) = longitude_deg           'Degress longitude (+ = East; - = West)
Alias gps_data(4) = longitude_min           'Decimal minutes longitude
Alias gps_data(5) = speed                   'Speed
Alias gps_data(6) = course                  'Course over ground
Alias gps_data(7) = magnetic_variation      'Magnetic variation from true north (+ = East; - = West)
Alias gps_data(8) = fix_quality             'GPS fix quality: 0 = invalid, 1 = GPS, 2 = 'differential GPS, 6 = estimated
Alias gps_data(9) = nmbr_satellites         'Number of satellites used for fix
Alias gps_data(10) = altitude               'Antenna altitude
Alias gps_data(11) = pps                    'Elapsed ms since last pulse per second (PPS) from GPS
Alias gps_data(12) = dt_since_gprmc         'Time since last GPRMC string, normally less than '1 second
Alias gps_data(13) = gps_ready              'Counts from 0 to 10, 10 = ready
Alias gps_data(14) = max_clock_change       'Maximum value the clock was changed
Alias gps_data(15) = nmbr_clock_change      'Number of times the clock was changed
Units latitude_deg = degreesN
Units latitude_min = minutesN
Units longitude_deg = degreesE
Units longitude_min = minutesE
Units speed = m/s
Units course = degreesEofN
Units magnetic_variation = degreesEofN
Units fix_quality = unitless
Units nmbr_satellites = unitless
Units altitude = m
Units pps = ms
Units dt_since_gprmc = s
Units gps_ready = unitless
Units max_clock_change = ms
Units nmbr_clock_change = occurrences

'Battery voltage and panel temp
Public BattV
Public PTemp_C
Public RTemp_C
Units  BattV = Volts
Units  PTemp_C = degC
Units  RTemp_C = degC

Dim divisor                                 'Temporary variable used to find molar mixing ratio.
Dim diag_integer  As Long                   'Temporary variable used to break up the sonic warning flags
Dim disable_stats_sonic(8) As Boolean       'Intermediate processing sonic disable flags 

'---------------------------------------------
' Define Output Data Tables
'---------------------------------------------
'Time series data
DataTable (Time_Series, TRUE, -1)
  DataInterval (0, SCN_INTV, mSec, 100)
  TableFile ("CRD:"&Status.SerialNumber(1,1)&".Time_Series_", 64, -1, 0, DAY_TSRS_CRD, Day, 0, 0)

  'sonic time series output
  Sample (20, Ux_A4, IEEE4)

  'IRGA time series output
  Sample (12, co2_A4,IEEE4)

  'FW time series output
  Sample (1, FW_A2, IEEE4)

  'T & RH output
  Sample (2, Tair_A4, FP2)
  Sample (2, Tair_A2, FP2)
  Sample (2, Tair_A1, FP2)
  
EndTable


'Meterological data
DataTable (RMet_1Min, TRUE, -1)
  DataInterval (0,1,Min,10)
  TableFile ("CRD:"&Status.SerialNumber(1,1)&".Met_1Min", 64, -1, 0, DAY_RMET_CRD, Day, 0, 0)

  'Sonic data
  Average (1,Ts_A4,IEEE4,disable_stats_sonic(1))
  StdDev  (1,Ts_A4,IEEE4,disable_stats_sonic(1))
  Average (1,Ts_A3,IEEE4,disable_stats_sonic(3))
  StdDev  (1,Ts_A3,IEEE4,disable_stats_sonic(3))
  Average (1,Ts_A2,IEEE4,disable_stats_sonic(5))
  StdDev  (1,Ts_A2,IEEE4,disable_stats_sonic(5))
  Average (1,Ts_A1,IEEE4,disable_stats_sonic(7))
  StdDev  (1,Ts_A1,IEEE4,disable_stats_sonic(7))
  Average (1,Ux_A4,IEEE4,disable_stats_sonic(1))
  StdDev  (1,Ux_A4,IEEE4,disable_stats_sonic(1))
  Average (1,Ux_A3,IEEE4,disable_stats_sonic(3))
  StdDev  (1,Ux_A3,IEEE4,disable_stats_sonic(3))
  Average (1,Ux_A2,IEEE4,disable_stats_sonic(5))
  StdDev  (1,Ux_A2,IEEE4,disable_stats_sonic(5))
  Average (1,Ux_A1,IEEE4,disable_stats_sonic(7))
  StdDev  (1,Ux_A1,IEEE4,disable_stats_sonic(7))
  Average (1,Uy_A4,IEEE4,disable_stats_sonic(1))
  StdDev  (1,Uy_A4,IEEE4,disable_stats_sonic(1))
  Average (1,Uy_A3,IEEE4,disable_stats_sonic(3))
  StdDev  (1,Uy_A3,IEEE4,disable_stats_sonic(3))
  Average (1,Uy_A2,IEEE4,disable_stats_sonic(5))
  StdDev  (1,Uy_A2,IEEE4,disable_stats_sonic(5))
  Average (1,Uy_A1,IEEE4,disable_stats_sonic(7))
  StdDev  (1,Uy_A1,IEEE4,disable_stats_sonic(7))
  Average (1,Uz_A4,IEEE4,disable_stats_sonic(1))
  StdDev  (1,Uz_A4,IEEE4,disable_stats_sonic(1))
  Average (1,Uz_A3,IEEE4,disable_stats_sonic(3))
  StdDev  (1,Uz_A3,IEEE4,disable_stats_sonic(3))
  Average (1,Uz_A2,IEEE4,disable_stats_sonic(5))
  StdDev  (1,Uz_A2,IEEE4,disable_stats_sonic(5))
  Average (1,Uz_A1,IEEE4,disable_stats_sonic(7))
  StdDev  (1,Uz_A1,IEEE4,disable_stats_sonic(7))

  WindVector (1,Uy_A4,Ux_A4,IEEE4,disable_stats_sonic(1),0,1,2)
  FieldNames ("ws_A4,ws_rslt_A4,wd_csat_A4,wd_sigma_A4")
  WindVector (1,Uy_A3,Ux_A3,IEEE4,disable_stats_sonic(3),0,1,2)
  FieldNames ("ws_A3,ws_rslt_A3,wd_csat_A3,wd_sigma_A3")
  WindVector (1,Uy_A2,Ux_A2,IEEE4,disable_stats_sonic(5),0,1,2)
  FieldNames ("ws_A2,ws_rslt_A2,wd_csat_A2,wd_sigma_A2")
  WindVector (1,Uy_A1,Ux_A1,IEEE4,disable_stats_sonic(7),0,1,2)
  FieldNames ("ws_A1,ws_rslt_A1,wd_csat_A1,wd_sigma_A1")

  'Irga data
  Average (1,co2_A4,IEEE4,False)
  StdDev  (1,co2_A4,IEEE4,False)
  Average (1,co2_A2,IEEE4,False)
  StdDev  (1,co2_A2,IEEE4,False)
  Average (1,co2_A1,IEEE4,False)
  StdDev  (1,co2_A1,IEEE4,False)
  Average (1,h2o_A4,IEEE4,False)
  StdDev  (1,h2o_A4,IEEE4,False)
  Average (1,h2o_A2,IEEE4,False)
  StdDev  (1,h2o_A2,IEEE4,False)
  Average (1,h2o_A1,IEEE4,False)
  StdDev  (1,h2o_A1,IEEE4,False)
  Average (1,mco2_A4,IEEE4,False)
  StdDev  (1,mco2_A4,IEEE4,False)
  Average (1,mco2_A2,IEEE4,False)
  StdDev  (1,mco2_A2,IEEE4,False)
  Average (1,mco2_A1,IEEE4,False)
  StdDev  (1,mco2_A1,IEEE4,False)
  Average (1,Press_irga_A4,IEEE4,False)
  Average (1,Press_irga_A2,IEEE4,False)
  Average (1,Press_irga_A1,IEEE4,False)
  Average (1,sig_irga_A4,FP2,False)
  Average (1,sig_irga_A2,FP2,False)
  Average (1,sig_irga_A1,FP2,False)
  
  'T & RH data
  Average (8,Tair_A4,IEEE4,False)

  'CNR4
  Average (1,Rn,IEEE4,False)
  Average (8, albedo, IEEE4,False)

  'LI190R
  Average  (1, PAR_density_A2, IEEE4,False)
  Sample (1, QUANTUM_SENS, FP2)

  'FW3
  Average  (1, FW_A2, IEEE4,False) 

  Average (1,PTemp_C,IEEE4,False)
  Average (1,RTemp_C,IEEE4,False)
  Average (1,BattV,IEEE4,False)


EndTable

'Status data
DataTable (Stats_30Min, TRUE, -1)
  DataInterval (0,30,Min,10)
  TableFile ("CRD:"&Status.SerialNumber(1,1)&".Stats_30Min", 64, -1, 0, DAY_RMET_CRD, Day, 0, 0)

  'Sonic data
  Average (1,Ts_A4,IEEE4,disable_stats_sonic(1))
  StdDev  (1,Ts_A4,IEEE4,disable_stats_sonic(1))
  Average (1,Ts_A3,IEEE4,disable_stats_sonic(3))
  StdDev  (1,Ts_A3,IEEE4,disable_stats_sonic(3))
  Average (1,Ts_A2,IEEE4,disable_stats_sonic(5))
  StdDev  (1,Ts_A2,IEEE4,disable_stats_sonic(5))
  Average (1,Ts_A1,IEEE4,disable_stats_sonic(7))
  StdDev  (1,Ts_A1,IEEE4,disable_stats_sonic(7))
  Average (1,Ux_A4,IEEE4,disable_stats_sonic(1))
  StdDev  (1,Ux_A4,IEEE4,disable_stats_sonic(1))
  Average (1,Ux_A3,IEEE4,disable_stats_sonic(3))
  StdDev  (1,Ux_A3,IEEE4,disable_stats_sonic(3))
  Average (1,Ux_A2,IEEE4,disable_stats_sonic(5))
  StdDev  (1,Ux_A2,IEEE4,disable_stats_sonic(5))
  Average (1,Ux_A1,IEEE4,disable_stats_sonic(7))
  StdDev  (1,Ux_A1,IEEE4,disable_stats_sonic(7))
  Average (1,Uy_A4,IEEE4,disable_stats_sonic(1))
  StdDev  (1,Uy_A4,IEEE4,disable_stats_sonic(1))
  Average (1,Uy_A3,IEEE4,disable_stats_sonic(3))
  StdDev  (1,Uy_A3,IEEE4,disable_stats_sonic(3))
  Average (1,Uy_A2,IEEE4,disable_stats_sonic(5))
  StdDev  (1,Uy_A2,IEEE4,disable_stats_sonic(5))
  Average (1,Uy_A1,IEEE4,disable_stats_sonic(7))
  StdDev  (1,Uy_A1,IEEE4,disable_stats_sonic(7))
  Average (1,Uz_A4,IEEE4,disable_stats_sonic(1))
  StdDev  (1,Uz_A4,IEEE4,disable_stats_sonic(1))
  Average (1,Uz_A3,IEEE4,disable_stats_sonic(3))
  StdDev  (1,Uz_A3,IEEE4,disable_stats_sonic(3))
  Average (1,Uz_A2,IEEE4,disable_stats_sonic(5))
  StdDev  (1,Uz_A2,IEEE4,disable_stats_sonic(5))
  Average (1,Uz_A1,IEEE4,disable_stats_sonic(7))
  StdDev  (1,Uz_A1,IEEE4,disable_stats_sonic(7))

  WindVector (1,Uy_A4,Ux_A4,IEEE4,disable_stats_sonic(1),0,1,2)
  FieldNames ("ws_A4,ws_rslt_A4,wd_csat_A4,wd_sigma_A4")
  WindVector (1,Uy_A3,Ux_A3,IEEE4,disable_stats_sonic(3),0,1,2)
  FieldNames ("ws_A3,ws_rslt_A3,wd_csat_A3,wd_sigma_A3")
  WindVector (1,Uy_A2,Ux_A2,IEEE4,disable_stats_sonic(5),0,1,2)
  FieldNames ("ws_A2,ws_rslt_A2,wd_csat_A2,wd_sigma_A2")
  WindVector (1,Uy_A1,Ux_A1,IEEE4,disable_stats_sonic(7),0,1,2)
  FieldNames ("ws_A1,ws_rslt_A1,wd_csat_A1,wd_sigma_A1")

  'Irga data
  Average (1,co2_A4,IEEE4,False)
  StdDev  (1,co2_A4,IEEE4,False)
  Average (1,co2_A2,IEEE4,False)
  StdDev  (1,co2_A2,IEEE4,False)
  Average (1,co2_A1,IEEE4,False)
  StdDev  (1,co2_A1,IEEE4,False)
  Average (1,h2o_A4,IEEE4,False)
  StdDev  (1,h2o_A4,IEEE4,False)
  Average (1,h2o_A2,IEEE4,False)
  StdDev  (1,h2o_A2,IEEE4,False)
  Average (1,h2o_A1,IEEE4,False)
  StdDev  (1,h2o_A1,IEEE4,False)
  Average (1,mco2_A4,IEEE4,False)
  StdDev  (1,mco2_A4,IEEE4,False)
  Average (1,mco2_A2,IEEE4,False)
  StdDev  (1,mco2_A2,IEEE4,False)
  Average (1,mco2_A1,IEEE4,False)
  StdDev  (1,mco2_A1,IEEE4,False)
  Average (1,Press_irga_A4,IEEE4,False)
  Average (1,Press_irga_A2,IEEE4,False)
  Average (1,Press_irga_A1,IEEE4,False)
  Average (1,sig_irga_A4,FP2,False)
  Average (1,sig_irga_A2,FP2,False)
  Average (1,sig_irga_A1,FP2,False)
  
  'T & RH data
  Average (8,Tair_A4,IEEE4,False)

  'CNR4
  Average (1,Rn,IEEE4,False)
  Average (8, albedo, IEEE4,False)

  'LI190R
  Average  (1, PAR_density_A2, IEEE4,False)
  Sample (1, QUANTUM_SENS, FP2)

  'FW3
  Average  (1, FW_A2, IEEE4,False)

  'CSATB Monitor
  Average (16,Btemp_A4,IEEE4,False)

  ' sonic flag
  Totalize (1,1,IEEE4, disable_stats_sonic(1))
  Totalize (1,1,IEEE4, NOT (disable_stats_sonic(1) OR disable_stats_sonic(2)))
  FieldNames ("csat_warnings_A4")
  Totalize (1,1,IEEE4,NOT (FLowAmp_A4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_LowAmp_Tot_A4")
  Totalize (1,1,IEEE4,NOT (FHighAmp_A4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_HighAmp_Tot_A4")
  Totalize (1,1,IEEE4,NOT (FTracking_A4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_Tracking_Tot_A4")
  Totalize (1,1,IEEE4,NOT (FHighDeltaC_A4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_HighDeltaC_Tot_A4")
  Totalize (1,1,IEEE4,NOT (FAcq_A4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_Acq_Tot_A4")
  Totalize (1,1,IEEE4,NOT (FLowVolt_A4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_LowVolt_Tot_A4")
  Totalize (1,1,IEEE4,NOT (FMemErr_A4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_MemErr_Tot_A4")
  Totalize (1,1,IEEE4,NOT (FADCSkip_A4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_ADCSkip_Tot_A4")
  Totalize (1,1,IEEE4,NOT (FTrigErr_A4) OR NOT (disable_stats_sonic(2)))
  FieldNames ("Flag_TrigErr_Tot_A4")

  Totalize (1,1,IEEE4,disable_stats_sonic(3))
  Totalize (1,1,IEEE4,NOT (disable_stats_sonic(3) OR disable_stats_sonic(4)))
  FieldNames ("csat_warnings_A3")
  Totalize (1,1,IEEE4,NOT (FLowAmp_A3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_LowAmp_Tot_A3")
  Totalize (1,1,IEEE4,NOT (FHighAmp_A3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_HighAmp_Tot_A3")
  Totalize (1,1,IEEE4,NOT (FTracking_A3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_Tracking_Tot_A3")
  Totalize (1,1,IEEE4,NOT (FHighDeltaC_A3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_HighDeltaC_Tot_A3")
  Totalize (1,1,IEEE4,NOT (FAcq_A3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_Acq_Tot_A3")
  Totalize (1,1,IEEE4,NOT (FLowVolt_A3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_LowVolt_Tot_A3")
  Totalize (1,1,IEEE4,NOT (FMemErr_A3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_MemErr_Tot_A3")
  Totalize (1,1,IEEE4,NOT (FADCSkip_A3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_ADCSkip_Tot_A3")
  Totalize (1,1,IEEE4,NOT (FTrigErr_A3) OR NOT (disable_stats_sonic(4)))
  FieldNames ("Flag_TrigErr_Tot_A3")

  Totalize (1,1,IEEE4,disable_stats_sonic(5))
  Totalize (1,1,IEEE4,NOT (disable_stats_sonic(5) OR disable_stats_sonic(6)))
  FieldNames ("csat_warnings_A2")
  Totalize (1,1,IEEE4,NOT (FLowAmp_A2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_LowAmp_Tot_A2")
  Totalize (1,1,IEEE4,NOT (FHighAmp_A2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_HighAmp_Tot_A2")
  Totalize (1,1,IEEE4,NOT (FTracking_A2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_Tracking_Tot_A2")
  Totalize (1,1,IEEE4,NOT (FHighDeltaC_A2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_HighDeltaC_Tot_A2")
  Totalize (1,1,IEEE4,NOT (FAcq_A2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_Acq_Tot_A2")
  Totalize (1,1,IEEE4,NOT (FLowVolt_A2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_LowVolt_Tot_A2")
  Totalize (1,1,IEEE4,NOT (FMemErr_A2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_MemErr_Tot_A2")
  Totalize (1,1,IEEE4,NOT (FADCSkip_A2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_ADCSkip_Tot_A2")
  Totalize (1,1,IEEE4,NOT (FTrigErr_A2) OR NOT (disable_stats_sonic(6)))
  FieldNames ("Flag_TrigErr_Tot_A2")

  Totalize (1,1,IEEE4,disable_stats_sonic(7))
  Totalize (1,1,IEEE4,NOT (disable_stats_sonic(7) OR disable_stats_sonic(8)))
  FieldNames ("csat_warnings_A1")
  Totalize (1,1,IEEE4,NOT (FLowAmp_A1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_LowAmp_Tot_A1")
  Totalize (1,1,IEEE4,NOT (FHighAmp_A1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_HighAmp_Tot_A1")
  Totalize (1,1,IEEE4,NOT (FTracking_A1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_Tracking_Tot_A1")
  Totalize (1,1,IEEE4,NOT (FHighDeltaC_A1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_HighDeltaC_Tot_A1")
  Totalize (1,1,IEEE4,NOT (FAcq_A1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_Acq_Tot_A1")
  Totalize (1,1,IEEE4,NOT (FLowVolt_A1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_LowVolt_Tot_A1")
  Totalize (1,1,IEEE4,NOT (FMemErr_A1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_MemErr_Tot_A1")
  Totalize (1,1,IEEE4,NOT (FADCSkip_A1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_ADCSkip_Tot_A1")
  Totalize (1,1,IEEE4,NOT (FTrigErr_A1) OR NOT (disable_stats_sonic(8)))
  FieldNames ("Flag_TrigErr_Tot_A1")
 
  Average (1,PTemp_C,IEEE4,False)
  Average (1,RTemp_C,IEEE4,False)
  Average (1,BattV,IEEE4,False)


EndTable


'---------------------------------------------
' MAIN PROGRAM 
'---------------------------------------------
BeginProg
 
'set original variables to NaN
Move (sonic(1),20,NaN,20)
	
'Set all LI-7500 variables to NaN.
Move (irga(1),12,NaN,12)

'Set FW variables to NaN.
Move (FW_A2,1,NaN,1)
	
'Set 3.3 VDC for pps
PortPairConfig (C1, 2)

'Set SDM clock speed
SDMSpeed (SDM_PER)

Scan (SCN_INTV, mSec, SCAN_BUFFER_SIZE, 0)
  'Trigger all SDM instruments to make measurements
  SDMTrigger
  
  PanelTemp (PTemp_C,250) 'Measure data logger panel temperature

  'FW3 fine-wire thermocouple
  TCDiff (FW_A2, 1, mV200, FW_ANALOG_INPUT, TypeE, PTemp_C, TRUE, 450, 250, 1, 0)

  'CSAT3B three dimensional sonic anemometer 
  CSAT3B(sonic(1),0,CSAT_SDM_ADDR_A4,0)
  CSAT3B(sonic(6),0,CSAT_SDM_ADDR_A3,0)
  CSAT3B(sonic(11),0,CSAT_SDM_ADDR_A2,0)
  CSAT3B(sonic(16),0,CSAT_SDM_ADDR_A1,0)

  'LI7500RS infrared CO2/H2O gas analyzer
  CS7500(irga(1),1,IRGA_SDM_ADDR_A4,7)
  CS7500(irga(5),1,IRGA_SDM_ADDR_A2,7)
  CS7500(irga(9),1,IRGA_SDM_ADDR_A1,7)
	
  'Break up the sonic warning flags into separate bits.
  diag_integer = diag_sonic_A4
  diag_bits_sonic(1) = diag_integer AND &h00000001
  diag_bits_sonic(2) = diag_integer AND &h00000002
  diag_bits_sonic(3) = diag_integer AND &h00000004
  diag_bits_sonic(4) = diag_integer AND &h00000008
  diag_bits_sonic(5) = diag_integer AND &h00000010
  diag_bits_sonic(6) = diag_integer AND &h00000020
  diag_bits_sonic(7) = diag_integer AND &h00000040
  diag_bits_sonic(8) = diag_integer AND &h00000080
  diag_bits_sonic(9) = diag_integer AND &h00000100
  'Turn on this intermediate processing disable flag when any
  'warning flag is set or the data returned is NaN
  disable_stats_sonic(1) = ((diag_integer AND &hffffffff) OR (diag_sonic_A4 = NaN))
  'Turn on this intermediate processing disable flag only when
  'CSAT3B diagnostic warning flags are set
  disable_stats_sonic(2) = ((diag_integer AND &hffffffff) AND NOT (diag_sonic_A4 = NaN))
 
  diag_integer = diag_sonic_A3
  diag_bits_sonic(10) = diag_integer AND &h00000001
  diag_bits_sonic(11) = diag_integer AND &h00000002
  diag_bits_sonic(12) = diag_integer AND &h00000004
  diag_bits_sonic(13) = diag_integer AND &h00000008
  diag_bits_sonic(14) = diag_integer AND &h00000010
  diag_bits_sonic(15) = diag_integer AND &h00000020
  diag_bits_sonic(16) = diag_integer AND &h00000040
  diag_bits_sonic(17) = diag_integer AND &h00000080
  diag_bits_sonic(18) = diag_integer AND &h00000100
  'Turn on this intermediate processing disable flag when any
  'warning flag is set or the data returned is NaN
  disable_stats_sonic(3) = ((diag_integer AND &hffffffff) OR (diag_sonic_A3 = NaN))
  'Turn on this intermediate processing disable flag only when
  'CSAT3B diagnostic warning flags are set
  disable_stats_sonic(4) = ((diag_integer AND &hffffffff) AND NOT (diag_sonic_A3 = NaN))

  diag_integer = diag_sonic_A2
  diag_bits_sonic(19) = diag_integer AND &h00000001
  diag_bits_sonic(20) = diag_integer AND &h00000002
  diag_bits_sonic(21) = diag_integer AND &h00000004
  diag_bits_sonic(22) = diag_integer AND &h00000008
  diag_bits_sonic(23) = diag_integer AND &h00000010
  diag_bits_sonic(24) = diag_integer AND &h00000020
  diag_bits_sonic(25) = diag_integer AND &h00000040
  diag_bits_sonic(26) = diag_integer AND &h00000080
  diag_bits_sonic(27) = diag_integer AND &h00000100
  'Turn on this intermediate processing disable flag when any
  'warning flag is set or the data returned is NaN
  disable_stats_sonic(5) = ((diag_integer AND &hffffffff) OR (diag_sonic_A2 = NaN))
  'Turn on this intermediate processing disable flag only when
  'CSAT3B diagnostic warning flags are set
  disable_stats_sonic(6) = ((diag_integer AND &hffffffff) AND NOT (diag_sonic_A2 = NaN))

  diag_integer = diag_sonic_A1
  diag_bits_sonic(28) = diag_integer AND &h00000001
  diag_bits_sonic(29) = diag_integer AND &h00000002
  diag_bits_sonic(30) = diag_integer AND &h00000004
  diag_bits_sonic(31) = diag_integer AND &h00000008
  diag_bits_sonic(32) = diag_integer AND &h00000010
  diag_bits_sonic(33) = diag_integer AND &h00000020
  diag_bits_sonic(34) = diag_integer AND &h00000040
  diag_bits_sonic(35) = diag_integer AND &h00000080
  diag_bits_sonic(36) = diag_integer AND &h00000100
  'Turn on this intermediate processing disable flag when any
  'warning flag is set or the data returned is NaN
  disable_stats_sonic(7) = ((diag_integer AND &hffffffff) OR (diag_sonic_A1 = NaN))
  'Turn on this intermediate processing disable flag only when
  'CSAT3B diagnostic warning flags are set
  disable_stats_sonic(8) = ((diag_integer AND &hffffffff) AND NOT (diag_sonic_A1 = NaN))

  '-------------------------------------------------------------------
  'Convert LI-7500 data from molar density [mmol/m^3] to mass density.
  ' 44 [g/mol] - molecular weight of carbon dioxide
  ' 0.018 [g/mmol] - molecular weight of water vapor
  '-------------------------------------------------------------------
  If ( NOT (co2_A4 = -99999) ) Then ( co2_A4 = co2_A4*44 )
  h2o_A4 = h2o_A4*0.018
  If ( NOT (co2_A2 = -99999) ) Then ( co2_A2 = co2_A2*44 )
  h2o_A2 = h2o_A2*0.018
  If ( NOT (co2_A1 = -99999) ) Then ( co2_A1 = co2_A1*44 )
  h2o_A1 = h2o_A1*0.018
   
  'Compute CO2 molar density by molar fraction (ppm)
   divisor = (Press_irga_A4/(R*(Ts_A4+273.15)))-(h2o_A4/18)
   mco2_A4 = co2_A4/(0.04401*divisor)
   divisor = (Press_irga_A2/(R*(Ts_A2+273.15)))-(h2o_A2/18)
   mco2_A2 = co2_A2/(0.04401*divisor)
   divisor = (Press_irga_A1/(R*(Ts_A1+273.15)))-(h2o_A1/18)
   mco2_A1 = co2_A1/(0.04401*divisor)

  'Save time series data.
  CallTable Time_Series

  'Save meterological data
  CallTable RMet_1Min

  'Save status data
  CallTable Stats_30Min

NextScan

SlowSequence

Scan (SLW_SCN_INTV,mSec,10,0)
  Battery (BattV)         'Measure battery voltage.

  'CSAT3B three dimensional sonic anemometer 
  CSAT3BMonitor(monitor(1),0,CSAT_SDM_ADDR_A4)
  CSAT3BMonitor(monitor(5),0,CSAT_SDM_ADDR_A3)
  CSAT3BMonitor(monitor(9),0,CSAT_SDM_ADDR_A2)
  CSAT3BMonitor(monitor(13),0,CSAT_SDM_ADDR_A1)

  'CNR4 4-component net radiometer
  VoltDiff (R_SW_in, 4, AutoRange, NR_ANALOG_INPUT, TRUE, 0, ANALOG_INTEGRATION, 1, 0)
  R_SW_in       = R_SW_in*CNR4_SW_IN_CAL
  R_SW_out      = R_SW_out*CNR4_SW_OUT_CAL
  R_LW_in_meas  = R_LW_in*CNR4_LW_IN_CAL
  R_LW_out_meas = R_LW_out*CNR4_LW_OUT_CAL

  Rn_raw = R_SW_in - R_SW_out + R_LW_in_meas - R_LW_out_meas

  If (R_SW_in >0) AND (R_SW_in >= R_SW_out) Then
    albedo = R_SW_out/R_SW_in
  Else
    albedo = 0
  EndIf

  'Correct longwave radiation.
  BrHalf (X_cnr4, 1, mV1000, (2*T_NR_ANALOG_INPUT -1), T_NR_VOLTAGE_EXCITATION, 1, 1000, TRUE, 0, ANALOG_INTEGRATION, 1, 0)
  ln_R = LOG (1000*X_cnr4/(1-X_cnr4))
  T_nr = (1/(A_SHH+B_SHH*ln_R+C_SHH*ln_R*ln_R*ln_R))

  R_LW_in  = R_LW_in_meas  + (5.67e-8*T_nr*T_nr*T_nr*T_nr)
  R_LW_out = R_LW_out_meas + (5.67e-8*T_nr*T_nr*T_nr*T_nr)

  Rn = R_SW_in - R_SW_out + R_LW_in- R_LW_out

  'LI190R quantum (PAR) sensor
  VoltDiff (PAR_density_A2, 1, mV200C, QUANTUM_ANALOG_INPUT, True, 0, ANALOG_INTEGRATION, 1, 0)
  If (PAR_density_A2 >= 0) Then
    PAR_density_A2 = 0
  Else
    PAR_density_A2 = -QUANTUM_MULT*PAR_density_A2 + QUANTUM_OFFSET
  EndIf

  'Temperature and relative humidity probe
  AM25T(Tair_A1,2,mV1000,1,AM25T_DiffChan,-1,RTemp_C,AM25T_ClkPort,AM25T_ResPort,AM25T_ExChan,True,0,ANALOG_INTEGRATION,1,0)
  AM25T(Tair_A2,2,mV1000,3,AM25T_DiffChan,-1,RTemp_C,AM25T_ClkPort,AM25T_ResPort,AM25T_ExChan,True,0,ANALOG_INTEGRATION,1,0)
  AM25T(Tair_A3,2,mV1000,5,AM25T_DiffChan,-1,RTemp_C,AM25T_ClkPort,AM25T_ResPort,AM25T_ExChan,True,0,ANALOG_INTEGRATION,1,0)
  AM25T(Tair_A4,2,mV1000,7,AM25T_DiffChan,-1,RTemp_C,AM25T_ClkPort,AM25T_ResPort,AM25T_ExChan,True,0,ANALOG_INTEGRATION,1,0)
  Tair_A4 = Tair_A4 * TMPR_MULT_A4 + TMPR_OFFSET_A4
  RH_A4   = RH_A4 * RH_MULT + RH_OFFSET
  Tair_A3 = Tair_A3 * TMPR_MULT + TMPR_OFFSET
  RH_A3   = RH_A3 * RH_MULT + RH_OFFSET
  Tair_A2 = Tair_A2 * TMPR_MULT + TMPR_OFFSET
  RH_A2   = RH_A2 * RH_MULT + RH_OFFSET
  Tair_A1 = Tair_A1 * TMPR_MULT + TMPR_OFFSET
  RH_A1   = RH_A1 * RH_MULT + RH_OFFSET

  If (RH_A4 > 100 AND RH_A4 <103) Then (RH_A4 =100)
  If (RH_A3 > 100 AND RH_A3 <103) Then (RH_A3 =100)
  If (RH_A2 > 100 AND RH_A2 <103) Then (RH_A2 =100)
  If (RH_A1 > 100 AND RH_A1 <103) Then (RH_A1 =100)

  'GPS16X-HVS
  GPS (gps_data(1),GPS16X_COM,UTC_OFFSET*3600,MAX_CLOCK_DRIFT,nmea_sentence(1))

NextScan

EndProg
